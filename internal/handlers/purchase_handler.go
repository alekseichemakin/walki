package handlers

import (
	"context"
	"fmt"
	"log"
	"walki/internal/models"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func (h *Handler) handlePurchase(chatID int64, user *models.User, routeID int) {

	// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Ä—à—Ä—É—Ç–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–µ–Ω—ã
	ctx := context.Background()
	route, err := h.routes.Details(ctx, routeID)
	if err != nil {
		log.Printf("Error getting route details for purchase: %v", err)
		h.sendMessage(chatID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Ä—à—Ä—É—Ç–µ")
		return
	}

	// –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–∑–∞–≥–ª—É—à–∫–∞ –æ–ø–ª–∞—Ç—ã)
	order, err := h.orders.Purchase(ctx, user.ID, routeID)
	if err != nil {
		log.Printf("Error creating order: %v", err)
		h.sendMessage(chatID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞")
		return
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
	message := fmt.Sprintf(
		"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–∫—É–ø–∫–æ–π!\n\n"+
			"üìç *%s*\n"+
			"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: %.2f —Ä—É–±.\n"+
			"üìÖ –î–æ—Å—Ç—É–ø–µ–Ω –¥–æ: %s\n\n"+
			"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≥—É–ª–∫—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª \"üë§ –ü—Ä–æ—Ñ–∏–ª—å\" -> \"–ú–æ–∏ –º–∞—Ä—à—Ä—É—Ç—ã\"",
		route.Title,
		order.Amount,
		order.AccessExpiry.Format("02.01.2006"),
	)

	// –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	profileBtn := tgbotapi.NewInlineKeyboardButtonData("üë§ –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å", CallbackMyRoutes)
	menuBtn := tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", CallbackMainMenu)

	markup := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(profileBtn),
		tgbotapi.NewInlineKeyboardRow(menuBtn),
	)

	msg := tgbotapi.NewMessage(chatID, message)
	msg.ParseMode = "Markdown"
	msg.ReplyMarkup = markup
	if _, err := h.bot.Send(msg); err != nil {
		log.Printf("Error sending message: %v", err)
	}
}
